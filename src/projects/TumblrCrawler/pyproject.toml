[project]
name = "tumblr-crawler"
version = "0.1.0"
description = "A web crawler for extracting Tumblr content and converting to markdown"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "markdownify>=0.11.6",
    "python-dateutil>=2.8.0",
    "urllib3>=2.0.0",
    "Pillow>=10.0.0",
    "click>=8.1.0",
    "tqdm>=4.65.0",
    "selenium>=4.15.0",
    "webdriver-manager>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "coverage>=7.0.0",
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    "lxml>=4.9.0",
]

[project.scripts]
tumblr-crawler = "tumblr_crawler.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["."]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "test/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "coverage>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    "lxml>=4.9.0",
]
